name: Test and Publish

on:
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Flake 8
        run: |
          pip install flake8

      - name: Run Flake 8
        run: |
          flake8 --max-line-length=120


      # Job "unit" anlegen
      # Code auschecken und Python 3.12 installieren
      # Poetry installieren und Abhängigkeiten installieren:
      #    pip install poetry
      #    poetry install --no-interaction --no-root
      # Tests ausführen
      #    im Ordner "src":
      #    poetry run pytest --cov tests/      

  unit:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry and Dependencies
        run: |
         pip install poetry
         poetry install --no-interaction --no-root

      - name: Run Tests
        run: |
          cd src
          poetry run pytest --cov tests/

  build:
    runs-on: ubuntu-latest
    needs:
      - unit
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry and Dependencies
        run: |
         pip install poetry
         poetry install --no-interaction --no-root

      - name: Build Python Package
        run: |
          poetry build
          ls dist/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: dist
          retention-days: 3 # default: 3

  # test:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build
  #   steps:

  #     - name: Download Build Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: package

  #     - name: Setup Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.12"

  #     - name: Install Package
  #       run: |
  #         pip install my_math*.whl

  test:
    runs-on: ${{ matrix.os }}
    needs:
      - build
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: ["ubuntu-latest", "macos-latest"]
    steps:

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: package

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Package
        run: |
          pip install my_math*.whl

      - name: Checkout the tests
        uses: actions/checkout@v4
        with:
          sparse-checkout: src/tests

      - name: Run the tests again installed package
        working-directory: src
        run: |
          pip install pytest pytest-benchmark
          pytest tests/
